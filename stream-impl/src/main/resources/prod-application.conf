akka {
  actor {
    provider = cluster
  }

  cluster {
    shutdown-after-unsuccessful-join-seed-nodes = 40s
  }

  discovery {
    method = kubernetes-api
    kubernetes-api {
      pod-label-selector = "appName=%s"
      pod-namespace = ${?RP_NAMESPACE}
    }
  }

  io {
    dns {
      resolver = async-dns
      async-dns {
        provider-object = "com.lightbend.rp.asyncdns.AsyncDnsProvider"
        resolve-srv = true
        resolv-conf = on
      }
    }
  }

  remote {
    netty.tcp {
      hostname = ${?RP_ENDPOINT_AKKA_REMOTE_HOST}
      port = ${?RP_ENDPOINT_AKKA_REMOTE_PORT}

      bind-hostname = ${?RP_ENDPOINT_AKKA_REMOTE_BIND_HOST}
      bind-port = ${?RP_ENDPOINT_AKKA_REMOTE_BIND_PORT}
    }
  }

  # akka management and cluster bootstrap 
  library-extensions += "com.lightbend.rp.akkaclusterbootstrap.ClusterBootstrapAutostart"
  library-extensions += "com.lightbend.rp.akkamanagement.AkkaManagementAutostart"

  management {
    http {
      hostname = ${?RP_ENDPOINT_AKKA_MGMT_HTTP_HOST}
      port = ${?RP_ENDPOINT_AKKA_MGMT_HTTP_PORT}
      bind-hostname = ${?RP_ENDPOINT_AKKA_MGMT_HTTP_BIND_HOST}
      bind-port = ${?RP_ENDPOINT_AKKA_MGMT_HTTP_BIND_PORT}
    }

    cluster.bootstrap.contact-point-discovery {
      port-name = "akka-mgmt-http"
      effective-name = ${?RP_APP_NAME}
      required-contact-point-nr = 3
    }
  }

  # app status
  library-extensions += "com.lightbend.rp.status.ApplicationStatus"
  management {
    http {
      route-providers += "com.lightbend.rp.status.ApplicationStatus"
    }
  }
}

com.lightbend.platform-tooling {
  status {
    health-checks += "com.lightbend.rp.akkaclusterbootstrap.ClusterStatusCheck"
    readiness-checks += "com.lightbend.rp.akkaclusterbootstrap.ClusterStatusCheck"
  }
}

lagom {
  cluster {
    exit-jvm-when-system-terminated = on
    join-self = off
  }
}

play {
  server {
    # See sbt-reactive-app and reactive-cli to understand where these values come from
    http.address = ${?RP_ENDPOINT_0_BIND_HOST}
    http.port = ${?RP_ENDPOINT_0_BIND_PORT}
  }
}
play.modules.enabled += com.lightbend.rp.servicediscovery.lagom.javadsl.ServiceLocatorModule   

include "application"